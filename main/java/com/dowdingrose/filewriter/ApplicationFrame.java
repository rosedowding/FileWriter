package com.dowdingthomas.filewriter;
import javax.swing.filechooser.FileSystemView; //This is used to get the correct directories so that the file can be saved to the correct path
import javax.swing.JOptionPane; //This is used to generate dialog boxes
import java.io.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Rose
 */
public class ApplicationFrame extends javax.swing.JFrame {

    /**
     * Creates new form ApplicationFrame
     */
    public ApplicationFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        fileInput = new javax.swing.JTextArea();
        fileInputLabel = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        fileNameInput = new javax.swing.JTextField();
        fileNameInputLabel = new javax.swing.JLabel();
        fileLocationInput = new javax.swing.JComboBox<>();
        fileLocationInputLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("File Writer");
        setName("File Writer"); // NOI18N

        fileInput.setColumns(20);
        fileInput.setRows(5);
        jScrollPane1.setViewportView(fileInput);

        fileInputLabel.setText("Input Text:");

        saveButton.setText("Save File");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        fileNameInputLabel.setText("File Name (without extension):");

        fileLocationInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Documents", "Desktop" }));

        fileLocationInputLabel.setText("File Location:");

        jLabel1.setText("<html>\nPlease fill in the details below, and then click the button to save your file. <br>\nPlease note that filling in the details of a pre-existing file will overwrite that file without warning.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileInputLabel)
                    .addComponent(fileNameInputLabel)
                    .addComponent(fileLocationInputLabel)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(fileNameInput)
                        .addComponent(fileLocationInput, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addComponent(saveButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fileLocationInputLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fileLocationInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fileNameInputLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fileInputLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveButton)
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        String path = ""; //Declare a variable used to store the file path, and give it an empty string by default
        
        if (fileNameInput.getText().equals("")) { //If no file name has been specified
            JOptionPane.showMessageDialog(null, "Please enter a name for your file.", "Error", JOptionPane.ERROR_MESSAGE); //Display a dialog box on no frame with an error symbol
            return; //This will return no value... we are not expecting to return any values, however by putting a blank return statement in place we cancel out of the method and prevent any extra actions taking place
        }
        
        else if (fileLocationInput.getSelectedItem() == "Documents") { //If the user has selected the Documents folder
            path = FileSystemView.getFileSystemView().getDefaultDirectory().getPath() + "\\" + fileNameInput.getText() + ".txt"; //Set the path to the "default directory" (Documents on Windows) and append the file name
        }
        
        else if (fileLocationInput.getSelectedItem() == "Desktop") { //If the user has selected the Desktop folder
            path = FileSystemView.getFileSystemView().getHomeDirectory().getPath() + "\\" + fileNameInput.getText() + ".txt"; //Set the path to the "home directory", which is the desktop on Windows, and append the file name
        }
        
        File file = new File(path); //Create a new file object
        
        try { //The program will try to complete the following code
            FileWriter fileWriter = new FileWriter(file); //Create a new file writer object, the destination file being the one just created
            String textToWrite = fileInput.getText(); //Store the text value of the input field to a string
            fileWriter.write(textToWrite); //Write the text value of the input field to the file
            JOptionPane.showMessageDialog(null, "Successfully wrote to file", "Success", JOptionPane.INFORMATION_MESSAGE); //Display a dialog box on no frame with an info symbol
            fileWriter.close(); //Close the file
        }
        
        catch(Exception e) { //And if it catches an exception, it will instead run this code
            JOptionPane.showMessageDialog(null, "An unexpected error occured. Please try again, ensuring that all data entry fields are filled in correctly.", "Error", JOptionPane.ERROR_MESSAGE); //Display a dialog box with an error symbol on no frame
        }
       
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ApplicationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ApplicationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ApplicationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ApplicationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ApplicationFrame().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea fileInput;
    private javax.swing.JLabel fileInputLabel;
    private javax.swing.JComboBox<String> fileLocationInput;
    private javax.swing.JLabel fileLocationInputLabel;
    private javax.swing.JTextField fileNameInput;
    private javax.swing.JLabel fileNameInputLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables
}
